library(PieceExpIntensity)
document()
library(PieceExpIntensity)
document()
library(PieceExpIntensity)
document()
library(PieceExpIntensity)
document()
library(PieceExpIntensity)
document()
library(PieceExpIntensity)
library(PieceExpIntensity)
document()
document()
library(PieceExpIntensity)
document()
library(PieceExpIntensity)
library(PieceExpIntensity)
document()
library(roxygen2)
library(devtools)
document()
library(PieceExpIntensity)
library(PieceExpIntensity)
library(PieceExpIntensity)
document()
library(PieceExpIntensity)
library(PieceExpIntensity)
document()
library(PieceExpIntensity)
library(PieceExpIntensity)
document()
library(PieceExpIntensity)
library(PieceExpIntensity)
document()
library(roxygen2)
library(devtools)
document()
library(PieceExpIntensity)
library(PieceExpIntensity)
library(PieceExpIntensity)
document()
library(roxygen2)
library(devtools)
document()
library(PieceExpIntensity)
document()
library(PieceExpIntensity)
document()
library(PieceExpIntensity)
library(PieceExpIntensity)
document()
library(PieceExpIntensity)
library(PieceExpIntensity)
document()
library(roxygen2)
library(devtools)
document()
library(PieceExpIntensity)
library(PieceExpIntensity)
library(PieceExpIntensity)
document()
library(PieceExpIntensity)
document()
library(PieceExpIntensity)
##Pick Data and Source in c++ code, then RUN!!!
##SimList[[1]] has the stuff we need from Phase I/II
load("PH12SCEN1.rda")
##Set Design Epsilon
epsilon=.05
Accrue = 10
##Parameters for Simulating Phase 3
#betaA = c(.25, .5, -.5, -1.5, log(36/1.2))
#betaA = c(.25, .5, -.5, -3, log(36/1.257))
betaA = c(.25, .5, -.5, -2, log(36/1.257))
betaC=c(.5,-.5,log(24/1.185153))
ProbC = c(.4,.15)
probT = c(.1,.15,.25,.35,.5)
probE=c(.2,.4,.6,.7,.8)
##Efftox Parameters
Contour = c(.35, .75,.7,.4)
###Reorder Correctly
Hypermeans = c(.022,3.45,0,-4.23,3.1,0)
Hypervars = c(2.6761, 2.6852, .2, 3.1304, 3.1165, 1)
Hypervars=Hypervars^2
Accept = c(.3,.3)
Lower=c(.1,.1)
##Library objects
library(Rcpp)
library(RcppArmadillo)
library(survival)
##Source in c++ code
sourceCpp("D:/Users/Andrew/Desktop/Rice/Dr.Thall/Phase123/USECONT1.cpp")
sourceCpp("D:/Users/Andrew/Desktop/Rice/Dr.Thall/Phase123/EFFTOX7.cpp")
##Do we want to switch prior to phase 3?
DOUBLE=0
##Do you want to test the usual paradigm? Will always select BEST dose.
TEST=0
BestDose=3
##
nREP=5000
##Specify Null=0 or alternative =1
Hyp =  1
##How Long in phase I/II
Time2=1
##How long in between phases
Twait=1
##Dose levels
Dose=c(1,2,3,3.5,5)
Doselog = log(Dose)-mean(log(Dose))
Dose=(Dose-mean(Dose))/sd(Dose)
###################################
##NOW FLY LIKE THE WINDDD!!!!
########################################
##Book Keeping
Nsims=nREP
ALT=Hyp
What=rep(NA,5000)
for(b in 1:5000){
What[b]=SimList[[h]][[1]]
}
Nmax1=800
Nmax=Nmax1
##Number of events for looks (first look is the swap/switch)
NLook1 = 50
NLook = c(50,200,300)
NLook2=NLook
##Superiority Boundaries (length 1 less than NLook)
Sup = c(2.669, 1.981)
##Futility Boundaries (length 1 less than Sup)
Fut = c(.734)
##Control parameter
cmu = 24
CHOSENDOSE = rep(NA,nREP)
PRUNEDDOSE=CHOSENDOSE
StartingDose=CHOSENDOSE
DECISION=CHOSENDOSE
DECISIONREG=CHOSENDOSE
Npats = CHOSENDOSE
NpatsREG = CHOSENDOSE
TRIALTIMES = CHOSENDOSE
TRIALTIMESREG = CHOSENDOSE
TrialTimes=rep(NA,Nsims)
MaxObs = matrix(rep(NA,length(Dose)*4),nrow=4)
###Get Accrual in Phase III trial
ACC = cumsum(rexp(Nmax*2,Accrue))
##This Will store our overall treament in the trial
Trt = rep(NA,Nmax*2)
##Generate the outcomes for the control
TimeCont=rep(NA,Nmax)
YECont=TimeCont
YTCont=TimeCont
for(b in 1:length(TimeCont)){
YE=rbinom(1,1,ProbC[1])
YT=rbinom(1,1,ProbC[2])
YECont[b]=YE
YTCont[b]=YT
TimeCont[b]=rexp(1,1/exp(YE*betaC[1]+YT*betaC[2]+betaC[3]))
}
##Now we have the control outcomes
##Set the time to 0
trial.time=0
trial.time1=0
##Setup Storage matrices for this simulation rep
Times=rep(NA,Nmax*2)
TimesSET=Times
YE=Times
YT=Times
YESET=YE
YTSET=YE
Doses=Times
Treat=Times
Best=NA
Index=rep(1,length(Dose)+1)
##Get the Set Of doses
VEC = SimList[[h]][[2]]
SET = which(abs(VEC-max(VEC))<epsilon)
TRTSET=Trt
Index=rep(1,6)
XOLD = SimList[[h]][[3]][,1]
YEOLD=SimList[[h]][[3]][,2]
YTOLD=SimList[[h]][[3]][,3]
ACCOLD =SimList[[h]][[3]][,4]
if(Hyp==0){
TIMEOLD=SimList[[h]][[3]][,5]
}else{
TIMEOLD=SimList[[h]][[3]][,6]
}
if(TEST==1){
OptDose = BestDose
}else{
OptDose=SimList[[h]][[1]]
}
StartingDose[h]=OptDose
OptDose1=OptDose
trial.time=ACC[1]
##Setup Storage matrices
Times=rep(NA,Nmax1*2)
YE=Times
YT=Times
Doses=Times
Treat=Times
##Stores Best treatment
Best=NA
Index=rep(1,length(Dose)+1)
###Enroll patients in the trial between two doses until the first interim look for dose switching
NDeath=0
i=1
Nmax=Nmax1
trial.time1=trial.time
while(NDeath<NLook[1]){
trial.time = trial.time +(ACC[i+1]-ACC[i])
Trt[i]=rbinom(1,1,.5)
YE[i]=YECont[i]
YT[i]=YTCont[i]
##If Group=0 it's in the control
if(Trt[i]==0){
Times[i]=TimeCont[i]
Treat[i]=0
Index[6]=Index[6]+1;
Doses[i]=0
}else{
##Generate Binary indicators for first part of trial
YE[i]  = rbinom(1,1,probE[OptDose])
YT[i] =  rbinom(1,1,probT[OptDose])
Times[i]= rexp(1,1/exp(betaA[1]*Dose[OptDose]+betaA[4]*Dose[OptDose]^2+YE[i]*betaA[2]+YT[i]*betaA[3]+betaA[5]))
Index[OptDose]=Index[OptDose]+1
Doses[i]=OptDose
}
##Calculate the numnber of toxicities in the trial thusfar
NDeath = sum((ACC+Times)<trial.time,na.rm=TRUE)
##Add to i
i=i+1
}
##Now we have NLook patient events. Let's see what dose we should use for the remainder of the trial
TimesREG = Times
DosesREG=Doses
iREG=i
trial.reg = trial.time
Y = Times[1:(i-1)]
ACC1=ACC[1:(i-1)]
Trt1=Trt[1:(i-1)]
Y = pmin(Y,trial.time-ACC1)
I = (Y+ACC1)<trial.time
YE1 = YE[1:(i-1)]
YT1 = YT[1:(i-1)]
YE1=c(YE1,YEOLD)
YT1=c(YT1,YTOLD)
##Package up the phase I/II data too
Doses1= Doses[1:(i-1)]
##Time accrued into Phase I/II portion of trial.
ACCOLD1=max(ACCOLD)-ACCOLD - Time2 + Twait
TIMEOLD1 = pmin(TIMEOLD,ACCOLD1+trial.time)
IOLD1=(TIMEOLD==TIMEOLD1)
Trt2=c(Trt1,rep(1,length(YEOLD)))
Y=c(Y,TIMEOLD1)
I=c(I,IOLD1)
Doses2=c(Doses1,XOLD)
##Remove Any Doses That Has less than 3 patients, we don't want to use this data.
B=2e3
##Use EFFTOX PROGRAM TO GET probmat quantities!!
G2=EFFTOX(YE1, YT1, Dose[Doses2],Dose,  Hypermeans,  Hypervars,  Contour,  Accept, Lower,  B )
probmat1=G2[[2]]
B=2e3
if(sum(YE1[YT1==0]==0)>0){
MaxObs[1,]=rep(max(Y[YE1==0 & YT1==0]),length(Dose))
}else{
MaxObs[1,]=rep(0,length(Dose))
}
if(sum(YE1[YT1==0]==1)>0){
MaxObs[2,]=rep(max(Y[YE1==1 & YT1==0]),length(Dose))
}else{
MaxObs[2,]=rep(0,length(Dose))
}
if(sum(YE1[YT1==1]==0)>0){
MaxObs[3,]=rep(max(Y[YE1==0 & YT1==1]),length(Dose))
}else{
MaxObs[3,]=rep(0,length(Dose))
}
if(sum(YE1[YT1==1]==1)>0){
MaxObs[4,]=rep(max(Y[YE1==1 & YT1==1]),length(Dose))
}else{
MaxObs[4,]=rep(0,length(Dose))
}
YE1=(YE1-mean(YE1))/sd(YE1)
YT1=(YT1-mean(YT1))/sd(YT1)
##Have Data For trial, Run MCMC
Doses2[Doses2==0]=1
##Pick Data and Source in c++ code, then RUN!!!
##SimList[[1]] has the stuff we need from Phase I/II
load("PH12SCEN1.rda")
##Set Design Epsilon
epsilon=.05
Accrue = 10
##Parameters for Simulating Phase 3
#betaA = c(.25, .5, -.5, -1.5, log(36/1.2))
#betaA = c(.25, .5, -.5, -3, log(36/1.257))
betaA = c(.25, .5, -.5, -2, log(36/1.257))
betaC=c(.5,-.5,log(24/1.185153))
ProbC = c(.4,.15)
probT = c(.1,.15,.25,.35,.5)
probE=c(.2,.4,.6,.7,.8)
##Efftox Parameters
Contour = c(.35, .75,.7,.4)
###Reorder Correctly
Hypermeans = c(.022,3.45,0,-4.23,3.1,0)
Hypervars = c(2.6761, 2.6852, .2, 3.1304, 3.1165, 1)
Hypervars=Hypervars^2
Accept = c(.3,.3)
Lower=c(.1,.1)
##Library objects
library(Rcpp)
library(RcppArmadillo)
library(survival)
##Source in c++ code
sourceCpp("D:/Users/Andrew/Desktop/Rice/Dr.Thall/Phase123/USECONT1.cpp")
sourceCpp("D:/Users/Andrew/Desktop/Rice/Dr.Thall/Phase123/EFFTOX7.cpp")
##Do we want to switch prior to phase 3?
DOUBLE=0
##Do you want to test the usual paradigm? Will always select BEST dose.
TEST=0
BestDose=3
##
nREP=5000
##Specify Null=0 or alternative =1
Hyp =  1
##How Long in phase I/II
Time2=1
##How long in between phases
Twait=1
##Dose levels
Dose=c(1,2,3,3.5,5)
Doselog = log(Dose)-mean(log(Dose))
Dose=(Dose-mean(Dose))/sd(Dose)
###################################
##NOW FLY LIKE THE WINDDD!!!!
########################################
##Book Keeping
Nsims=nREP
ALT=Hyp
What=rep(NA,5000)
for(b in 1:5000){
What[b]=SimList[[h]][[1]]
}
Nmax1=800
Nmax=Nmax1
##Number of events for looks (first look is the swap/switch)
NLook1 = 50
NLook = c(50,200,300)
NLook2=NLook
##Superiority Boundaries (length 1 less than NLook)
Sup = c(2.669, 1.981)
##Futility Boundaries (length 1 less than Sup)
Fut = c(.734)
##Control parameter
cmu = 24
CHOSENDOSE = rep(NA,nREP)
PRUNEDDOSE=CHOSENDOSE
StartingDose=CHOSENDOSE
DECISION=CHOSENDOSE
DECISIONREG=CHOSENDOSE
Npats = CHOSENDOSE
NpatsREG = CHOSENDOSE
TRIALTIMES = CHOSENDOSE
TRIALTIMESREG = CHOSENDOSE
TrialTimes=rep(NA,Nsims)
MaxObs = matrix(rep(NA,length(Dose)*4),nrow=4)
###Get Accrual in Phase III trial
ACC = cumsum(rexp(Nmax*2,Accrue))
##This Will store our overall treament in the trial
Trt = rep(NA,Nmax*2)
##Generate the outcomes for the control
TimeCont=rep(NA,Nmax)
YECont=TimeCont
YTCont=TimeCont
for(b in 1:length(TimeCont)){
YE=rbinom(1,1,ProbC[1])
YT=rbinom(1,1,ProbC[2])
YECont[b]=YE
YTCont[b]=YT
TimeCont[b]=rexp(1,1/exp(YE*betaC[1]+YT*betaC[2]+betaC[3]))
}
##Now we have the control outcomes
##Set the time to 0
trial.time=0
trial.time1=0
##Setup Storage matrices for this simulation rep
Times=rep(NA,Nmax*2)
TimesSET=Times
YE=Times
YT=Times
YESET=YE
YTSET=YE
Doses=Times
Treat=Times
Best=NA
Index=rep(1,length(Dose)+1)
##Get the Set Of doses
VEC = SimList[[h]][[2]]
SET = which(abs(VEC-max(VEC))<epsilon)
TRTSET=Trt
Index=rep(1,6)
XOLD = SimList[[h]][[3]][,1]
YEOLD=SimList[[h]][[3]][,2]
YTOLD=SimList[[h]][[3]][,3]
ACCOLD =SimList[[h]][[3]][,4]
if(Hyp==0){
TIMEOLD=SimList[[h]][[3]][,5]
}else{
TIMEOLD=SimList[[h]][[3]][,6]
}
if(TEST==1){
OptDose = BestDose
}else{
OptDose=SimList[[h]][[1]]
}
StartingDose[h]=OptDose
OptDose1=OptDose
trial.time=ACC[1]
##Setup Storage matrices
Times=rep(NA,Nmax1*2)
YE=Times
YT=Times
Doses=Times
Treat=Times
##Stores Best treatment
Best=NA
Index=rep(1,length(Dose)+1)
###Enroll patients in the trial between two doses until the first interim look for dose switching
NDeath=0
i=1
Nmax=Nmax1
trial.time1=trial.time
while(NDeath<NLook[1]){
trial.time = trial.time +(ACC[i+1]-ACC[i])
Trt[i]=rbinom(1,1,.5)
YE[i]=YECont[i]
YT[i]=YTCont[i]
##If Group=0 it's in the control
if(Trt[i]==0){
Times[i]=TimeCont[i]
Treat[i]=0
Index[6]=Index[6]+1;
Doses[i]=0
}else{
##Generate Binary indicators for first part of trial
YE[i]  = rbinom(1,1,probE[OptDose])
YT[i] =  rbinom(1,1,probT[OptDose])
Times[i]= rexp(1,1/exp(betaA[1]*Dose[OptDose]+betaA[4]*Dose[OptDose]^2+YE[i]*betaA[2]+YT[i]*betaA[3]+betaA[5]))
Index[OptDose]=Index[OptDose]+1
Doses[i]=OptDose
}
##Calculate the numnber of toxicities in the trial thusfar
NDeath = sum((ACC+Times)<trial.time,na.rm=TRUE)
##Add to i
i=i+1
}
##Now we have NLook patient events. Let's see what dose we should use for the remainder of the trial
TimesREG = Times
DosesREG=Doses
iREG=i
trial.reg = trial.time
Y = Times[1:(i-1)]
ACC1=ACC[1:(i-1)]
Trt1=Trt[1:(i-1)]
Y = pmin(Y,trial.time-ACC1)
I = (Y+ACC1)<trial.time
YE1 = YE[1:(i-1)]
YT1 = YT[1:(i-1)]
YE1=c(YE1,YEOLD)
YT1=c(YT1,YTOLD)
##Package up the phase I/II data too
Doses1= Doses[1:(i-1)]
##Time accrued into Phase I/II portion of trial.
ACCOLD1=max(ACCOLD)-ACCOLD - Time2 + Twait
TIMEOLD1 = pmin(TIMEOLD,ACCOLD1+trial.time)
IOLD1=(TIMEOLD==TIMEOLD1)
Trt2=c(Trt1,rep(1,length(YEOLD)))
Y=c(Y,TIMEOLD1)
I=c(I,IOLD1)
Doses2=c(Doses1,XOLD)
##Remove Any Doses That Has less than 3 patients, we don't want to use this data.
B=2e3
##Use EFFTOX PROGRAM TO GET probmat quantities!!
G2=EFFTOX(YE1, YT1, Dose[Doses2],Dose,  Hypermeans,  Hypervars,  Contour,  Accept, Lower,  B )
probmat1=G2[[2]]
B=2e3
if(sum(YE1[YT1==0]==0)>0){
MaxObs[1,]=rep(max(Y[YE1==0 & YT1==0]),length(Dose))
}else{
MaxObs[1,]=rep(0,length(Dose))
}
if(sum(YE1[YT1==0]==1)>0){
MaxObs[2,]=rep(max(Y[YE1==1 & YT1==0]),length(Dose))
}else{
MaxObs[2,]=rep(0,length(Dose))
}
if(sum(YE1[YT1==1]==0)>0){
MaxObs[3,]=rep(max(Y[YE1==0 & YT1==1]),length(Dose))
}else{
MaxObs[3,]=rep(0,length(Dose))
}
if(sum(YE1[YT1==1]==1)>0){
MaxObs[4,]=rep(max(Y[YE1==1 & YT1==1]),length(Dose))
}else{
MaxObs[4,]=rep(0,length(Dose))
}
YE1=(YE1-mean(YE1))/sd(YE1)
YT1=(YT1-mean(YT1))/sd(YT1)
##Have Data For trial, Run MCMC
Doses2[Doses2==0]=1
load("PH12SCEN1.rda")
